/* tslint:disable */
/* eslint-disable */
/**
 * GroceryGetter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Store
 */
export interface Store {
    /**
     * 
     * @type {number}
     * @memberof Store
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Store
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Store
     */
    address?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Store
     */
    city?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Store
     */
    state?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Store
     */
    zipCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Store
     */
    phoneNumber?: string | null;
}

/**
 * Check if a given object implements the Store interface.
 */
export function instanceOfStore(value: object): value is Store {
    return true;
}

export function StoreFromJSON(json: any): Store {
    return StoreFromJSONTyped(json, false);
}

export function StoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): Store {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'address': json['address'] == null ? undefined : json['address'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'zipCode': json['zipCode'] == null ? undefined : json['zipCode'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
    };
}

export function StoreToJSON(json: any): Store {
    return StoreToJSONTyped(json, false);
}

export function StoreToJSONTyped(value?: Store | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'address': value['address'],
        'city': value['city'],
        'state': value['state'],
        'zipCode': value['zipCode'],
        'phoneNumber': value['phoneNumber'],
    };
}

