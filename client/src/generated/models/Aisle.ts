/* tslint:disable */
/* eslint-disable */
/**
 * GroceryGetter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Layout } from './Layout';
import {
    LayoutFromJSON,
    LayoutFromJSONTyped,
    LayoutToJSON,
    LayoutToJSONTyped,
} from './Layout';

/**
 * 
 * @export
 * @interface Aisle
 */
export interface Aisle {
    /**
     * 
     * @type {number}
     * @memberof Aisle
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof Aisle
     */
    layoutId?: number;
    /**
     * 
     * @type {string}
     * @memberof Aisle
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Aisle
     */
    lineup?: number;
    /**
     * 
     * @type {Layout}
     * @memberof Aisle
     */
    layout?: Layout;
}

/**
 * Check if a given object implements the Aisle interface.
 */
export function instanceOfAisle(value: object): value is Aisle {
    return true;
}

export function AisleFromJSON(json: any): Aisle {
    return AisleFromJSONTyped(json, false);
}

export function AisleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Aisle {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'layoutId': json['layoutId'] == null ? undefined : json['layoutId'],
        'name': json['name'] == null ? undefined : json['name'],
        'lineup': json['lineup'] == null ? undefined : json['lineup'],
        'layout': json['layout'] == null ? undefined : LayoutFromJSON(json['layout']),
    };
}

export function AisleToJSON(json: any): Aisle {
    return AisleToJSONTyped(json, false);
}

export function AisleToJSONTyped(value?: Aisle | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'layoutId': value['layoutId'],
        'name': value['name'],
        'lineup': value['lineup'],
        'layout': LayoutToJSON(value['layout']),
    };
}

