/* tslint:disable */
/* eslint-disable */
/**
 * GroceryGetter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AisleProduct,
} from '../models/index';
import {
    AisleProductFromJSON,
    AisleProductToJSON,
} from '../models/index';

export interface ApiAisleProductsPostRequest {
    aisleProduct?: AisleProduct;
}

export interface GetAisleProductsByAisleIdRequest {
    aisleId: number;
}

export interface GetAisleProductsByIdRequest {
    aisleProductId: number;
}

/**
 * 
 */
export class AisleProductApi extends runtime.BaseAPI {

    /**
     */
    async apiAisleProductsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/aisleProducts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAisleProductsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiAisleProductsGetRaw(initOverrides);
    }

    /**
     */
    async apiAisleProductsPostRaw(requestParameters: ApiAisleProductsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/aisleProducts`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AisleProductToJSON(requestParameters['aisleProduct']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAisleProductsPost(requestParameters: ApiAisleProductsPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiAisleProductsPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getAisleProductsByAisleIdRaw(requestParameters: GetAisleProductsByAisleIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['aisleId'] == null) {
            throw new runtime.RequiredError(
                'aisleId',
                'Required parameter "aisleId" was null or undefined when calling getAisleProductsByAisleId().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/aisleProducts/{aisleId}`.replace(`{${"aisleId"}}`, encodeURIComponent(String(requestParameters['aisleId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async getAisleProductsByAisleId(requestParameters: GetAisleProductsByAisleIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getAisleProductsByAisleIdRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getAisleProductsByIdRaw(requestParameters: GetAisleProductsByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['aisleProductId'] == null) {
            throw new runtime.RequiredError(
                'aisleProductId',
                'Required parameter "aisleProductId" was null or undefined when calling getAisleProductsById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/aisleProducts/{aisleProductId}`.replace(`{${"aisleProductId"}}`, encodeURIComponent(String(requestParameters['aisleProductId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async getAisleProductsById(requestParameters: GetAisleProductsByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getAisleProductsByIdRaw(requestParameters, initOverrides);
    }

}
