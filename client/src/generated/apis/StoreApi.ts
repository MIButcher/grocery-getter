/* tslint:disable */
/* eslint-disable */
/**
 * GroceryGetter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Store,
} from '../models/index';
import {
    StoreFromJSON,
    StoreToJSON,
} from '../models/index';

export interface GetStoreByIdRequest {
    storeId: number;
}

export interface SaveStoreRequest {
    store?: Store;
}

/**
 * 
 */
export class StoreApi extends runtime.BaseAPI {

    /**
     */
    async getStoreByIdRaw(requestParameters: GetStoreByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Store>> {
        if (requestParameters['storeId'] == null) {
            throw new runtime.RequiredError(
                'storeId',
                'Required parameter "storeId" was null or undefined when calling getStoreById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/stores/{storeId}`;
        urlPath = urlPath.replace(`{${"storeId"}}`, encodeURIComponent(String(requestParameters['storeId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StoreFromJSON(jsonValue));
    }

    /**
     */
    async getStoreById(requestParameters: GetStoreByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Store> {
        const response = await this.getStoreByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getStoresRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Store>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/stores`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(StoreFromJSON));
    }

    /**
     */
    async getStores(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Store>> {
        const response = await this.getStoresRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async saveStoreRaw(requestParameters: SaveStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Store>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/stores`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: StoreToJSON(requestParameters['store']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StoreFromJSON(jsonValue));
    }

    /**
     */
    async saveStore(requestParameters: SaveStoreRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Store> {
        const response = await this.saveStoreRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
