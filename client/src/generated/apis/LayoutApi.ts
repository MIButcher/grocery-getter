/* tslint:disable */
/* eslint-disable */
/**
 * GroceryGetter
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Layout,
} from '../models/index';
import {
    LayoutFromJSON,
    LayoutToJSON,
} from '../models/index';

export interface ApiLayoutsPostRequest {
    layout?: Layout;
}

export interface GetLayoutByIdRequest {
    layoutId: number;
}

export interface GetLayoutsByStoreIdRequest {
    storeId: number;
}

/**
 * 
 */
export class LayoutApi extends runtime.BaseAPI {

    /**
     */
    async apiLayoutsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/layouts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiLayoutsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiLayoutsGetRaw(initOverrides);
    }

    /**
     */
    async apiLayoutsPostRaw(requestParameters: ApiLayoutsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/layouts`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LayoutToJSON(requestParameters['layout']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiLayoutsPost(requestParameters: ApiLayoutsPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiLayoutsPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getLayoutByIdRaw(requestParameters: GetLayoutByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['layoutId'] == null) {
            throw new runtime.RequiredError(
                'layoutId',
                'Required parameter "layoutId" was null or undefined when calling getLayoutById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/layouts/{layoutId}`.replace(`{${"layoutId"}}`, encodeURIComponent(String(requestParameters['layoutId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async getLayoutById(requestParameters: GetLayoutByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getLayoutByIdRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getLayoutsByStoreIdRaw(requestParameters: GetLayoutsByStoreIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['storeId'] == null) {
            throw new runtime.RequiredError(
                'storeId',
                'Required parameter "storeId" was null or undefined when calling getLayoutsByStoreId().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/layouts/{storeId}`.replace(`{${"storeId"}}`, encodeURIComponent(String(requestParameters['storeId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async getLayoutsByStoreId(requestParameters: GetLayoutsByStoreIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getLayoutsByStoreIdRaw(requestParameters, initOverrides);
    }

}
